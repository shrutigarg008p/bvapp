/**
 * Global variables
 */
 @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap");
 @import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap");


 $bp-small: 767px;
 $bp-medium: 992px;
 $bp-large: 1024px;
 $bp-wide: 1280px;
 
 // Colors
 $sitebasecolor: #000;
 $sitebackgroundcolor: #f7f7f7;
 $primaryBlue: #0d62fe;
 $lightBlue: #237baf;
 $darkBlue: #263e86;
 $textColor: #595959;
 $grayBorder: #c4c4c4;
 $textYellow: #b85c00;
 $color-primary: orange !default;
 $color-text: #222 !default;
 $lightblue: #01aeef;
 $yellow: #f3bf00;
 $red: #e34c22;
 $green: #6dbb29;
 $blue: #599dd5;
 $black: #0e0501;
 $white: #fff;
 $primaryGreen: #5fb257;
 
 $primaryColor: #fc3650;
 $secondaryColor: #9a9797;
 $pinkBg: #FF9980;
 $yellowBg:#FFE619;
 $greenBg:#98B300;
 $darkPinkBg: #ff4db3;
 $neonGreenBg:#b3ff00;
 $neonBlueBg:#4dffb2;
 $grayBg:#646262;
 // Fonts
 $primaryFont: "Inter";
 $font-base-size: 14px !default;
 $font-primary: "Open Sans";
 
 // Miscellaneous
 $image-path: "/assets/images";
 
/// Very basic media query mixin for min-width
/// @param {Number} $breakpoint
@mixin min-width($breakpoint) {
  @media screen and (min-width: #{if(type-of($breakpoint) == 'string', unquote($breakpoint), inspect($breakpoint))}) {
    @content;
  }
}

/// Very basic media query mixin for max-width
/// @param {Number} $breakpoint
@mixin max-width($breakpoint) {
  @media screen and (max-width: #{if(type-of($breakpoint) == 'string', unquote($breakpoint), inspect($breakpoint))}) {
    @content;
  }
}

/// Media query for high res devices
@mixin high-res() {
  @media (min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    @content;
  }
}

/* mixin for box color and hover */

@mixin backfigure($color1,$prop) {
 &.color-#{$color1}{	
		figcaption{
			background:$prop;
			position: relative;
			z-index: 9;
		}
		figure{
			&:after{
				@include transition(0.2s);
				position: absolute;
				content: "";
				top: 50%;
				left:50%;
				background:rgba($prop,0.8);
				width:0;
				height:0;
			}
		}	
			
		&:hover{			
			figure{
				&:after{					
					height:100%;		
					width:100%;
					top: 0;
					left:0;
				}
			}	
		}	

	}
}

/* mixin for font size */
@mixin fontsize($size) {
		font-size:$size;
		line-height:$size;
}

/* mixin for transition */
@mixin transition($property) {
  -webkit-transition: $property;
  -ms-transition: $property;
  transition: $property;
}

@mixin breakMinMax($length, $length2) {
  @media (min-width: $length) and  (max-width: $length2) {
    @content;
  }
}

@mixin breakMinOnly($length) {
  @media (min-width: $length) {
    @content;
  }
}

@mixin breakMaxOnly($length) {
  @media (max-width: $length) {
    @content;
  }
}

// @each $breakpoint in map-keys($grid-breakpoints) {
//   @include media-breakpoint-up($breakpoint) {
//     $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

//     .border#{$infix}-top {      border-top: $border-width solid $border-color !important; }
//     .border#{$infix}-right {    border-right: $border-width solid $border-color !important; }
//     .border#{$infix}-bottom {   border-bottom: $border-width solid $border-color !important; }
//     .border#{$infix}-left {     border-left: $border-width solid $border-color !important; }

//     .border#{$infix}-top-0 {    border-top: 0 !important; }
//     .border#{$infix}-right-0 {  border-right: 0 !important; }
//     .border#{$infix}-bottom-0 { border-bottom: 0 !important; }
//     .border#{$infix}-left-0 {   border-left: 0 !important; }

//     .border#{$infix}-x {
//       border-left: $border-width solid $border-color !important;
//       border-right: $border-width solid $border-color !important;
//     }

//     .border#{$infix}-y {
//       border-top: $border-width solid $border-color !important;
//       border-bottom: $border-width solid $border-color !important;
//     }
//   }
// }


/// Return url image path
/// @param {String} $path - image path
/// @param {String} $base - base URL
@function image($path, $base: $image-path) {
  @return url($base + $path);
}
